@model SaveMate.Models.Account

@{
    ViewData["Title"] = "Create Account";
}
<h2>Create Account</h2>
@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}
<form asp-action="Create" method="post">
   
    @* Hidden UserId *@
    <input type="hidden" asp-for="UserId" />

    @* Predefined Type Dropdown *@
    <div class="form-group">
        <label asp-for="PredefinedType" class="control-label"></label>
        <select asp-for="PredefinedType" class="form-control" id="predefinedType">
            <option value="">Select an account type...</option>
            @foreach (var type in ViewBag.PredefinedTypes as List<SelectListItem>)
            {
                <option value="@type.Value">@type.Text</option>
            }
        </select>
        <span asp-validation-for="PredefinedType" class="text-danger"></span>
    </div>



    @* Balance *@
    <div class="form-group">
        <label asp-for="Balance" class="control-label"></label>
        <input asp-for="Balance" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="Balance" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" asp-route-userId="@Model.UserId" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var predefinedTypeSelect = document.getElementById("predefinedType");
            var customTypeGroup = document.getElementById("customTypeGroup");

            predefinedTypeSelect.addEventListener("change", function () {
                if (predefinedTypeSelect.value === "Others") {
                    customTypeGroup.style.display = "block";
                } else {
                    customTypeGroup.style.display = "none";
                }
            });
        });
    </script>
}
